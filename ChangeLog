Change Log:
v0.3 - bug fixes and new functionality
	- network.dynamic.check now optionally reports what is wrong with an element
	- new functions get.vertex.activity and get.edge.activity to return activity matrices of elements
	- new function get.change.times to report timepoints at which network structure changes
	- new convienince function add.edges.active and add.vertices.active which add and activate elements in a single call
	- new delete.edge.activity and delete.vertex.activity functions to remove timing information from elements. 
	- activate.* and deactivate.* methods now modify class of network argument in place. 
	- speed and stability improvements to many functions
	- additional examples in help files
	- dactivate.vertices function now includes option to deactivate incident edges

v0.1-0 - Lots of rebuilding
    - added namespaces
    - moved duration.matrix script from ergm code, added some C code
    - update to package loading
    - renamed network.crossection to network.extract
    - ndConverter functions for translating various forms of relational information into networkDynamic format
    - addition of 'at' and 'length' arguments for most temporal methods
    - rebuilt code with increased argument checking for most spell related methods
    - added test cases for most methods
    - some changes in spec for spell handling
    - bug fixes in spell handling for interval queries
    - bug fix to network.dynamic.check
    - added dynamic network datasets of Newcomb's fraternities, Lin Freeman's Windsurfers and McFarland's classroom networks
    - filename of build now includes version information

v0.1-1 - Internal Bugfix Release, w/Minor New Function
  New Functions:
    - network.dynamic.check: Check dynamic consistency of network elements.
  Bug Fixes:
    - Removed tracer statements.  [Submitted by PNK]
    - is.active could fail if passed no edges to check.  [Submitted by PNK]
    - is.active could fail if passed infinite arguments in some cases.

v0.1 - Initial Internal Release
